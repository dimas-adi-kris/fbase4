"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setIamPolicy = exports.DEFAULT_PUBLIC_POLICY = void 0;
const apiv2_1 = require("../apiv2");
const error_1 = require("../error");
const api_1 = require("../api");
const proto = require("./proto");
const API_VERSION = "v1";
const client = new apiv2_1.Client({
    urlPrefix: api_1.runOrigin,
    auth: true,
    apiVersion: API_VERSION,
});
exports.DEFAULT_PUBLIC_POLICY = {
    version: 3,
    bindings: [
        {
            role: "roles/run.invoker",
            members: ["allUsers"],
        },
    ],
};
async function setIamPolicy(name, policy) {
    try {
        await client.post(`${name}:setIamPolicy`, {
            policy,
            updateMask: proto.fieldMasks(policy).join(","),
        });
    }
    catch (err) {
        throw new error_1.FirebaseError(`Failed to set the IAM Policy on the Service ${name}`, {
            original: err,
        });
    }
}
exports.setIamPolicy = setIamPolicy;
